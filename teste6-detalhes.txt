001000|00000|10000|0000000001000000 //addi $16, $0, 64 // $16 = 0 + 64
000000|10000|00001|00011|00000|100000//add $3, $16, $1 // $3 = $16 + $1 = 64 + 1001 = 1065
000000|00011|00001|00100|00000|100010//sub $4, $3, $1 // $4 = 1065-1001 = 64
000000|00100|01110|01111|00000|100100//and $15, $4, $14 //$15 = 64 & -1014 = 0
000000|00100|01110|10000|00000|100101//or  $16, $4, $14 //$16 = 64 | -1014 = -950 ( unsigned 4294966346)
101011|11101|00100|0000000000000111//sw $4, $29(7) // mem[3+7] = $4 = 64
100011|11101|00010|0000000000000111//lw $2, $29(7) // $2 = mem[3+7] = 64
000000|00000|00010|00110|00010|000000//sll $6, $2, 2 // $6 = 64*4 = 256
000000|00010|00110|01010|00000101010//slt $10, $2, $6 // $10 = $2 < $6 = 1
000100|00000|01111|1111111111010111//beq $15, $0, -41 // if(0 == 0) { pc = pc + 4 - 41*4 } (volta para a instrução add, segunda instrução da lista)
000101|00110|01111|1111111111010111//bne $15, $6, -41 // if(256 != 0) { pc = pc + 4 - 41*4 } (volta para a instrução add, segunda instrução da lista)